<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.service.mapper.UserCourseVideoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.course.api.entity.UserCourseVideo">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="course_id" property="courseId"/>
        <result column="video_id" property="videoId"/>
        <result column="learn_length" property="learnLength"/>
        <result column="cumulative_duration" property="cumulativeDuration"/>
        <result column="learn_status" property="learnStatus"/>
        <result column="created_at" property="createdAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, course_id, video_id, learn_length, cumulative_duration, learn_status, created_at, created_by, updated_at, updated_by
    </sql>
    <update id="increaseByColumn">
        update user_course_video
        set ${column} = ${column} + #{incr}
        where id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">#{item}</foreach>
    </update>
    <select id="listPagingByMap" resultMap="BaseResultMap">
        select id,
               user_id,
               course_id,
               video_id,
               learn_length,
               cumulative_duration,
               learn_status,
               created_at,
               updated_at
        from user_course_video uc
        where video_id = #{paramsMap.courseId}
        <if test="paramsMap.keyword !='' and paramsMap.keyword !=null">
            and exists(select id from user u where nickname like concat('%',#{paramsMap.keyword},'%') and u.id =uc.user_id)
        </if>
    </select>
    <select id="countLearn" resultType="com.course.api.dto.CountDto">
        SELECT
            user_id as id,
            SUM( learn_length ) as count
        FROM
            user_course_video
        WHERE user_id IN <foreach collection="list" item="item" open="(" separator="," close=")">#{item}</foreach>
        GROUP BY
            user_id
    </select>
</mapper>
